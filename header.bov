TIME: 1
DATA_FILE: MUPHY-partition.bov
# The data size corresponds to NX,NY,NZ in the above example code.
DATA_SIZE: 25 25 25
# Allowable values for DATA_FORMAT are: BYTE, INT, FLOAT, DOUBLE
DATA_FORMAT: INT
#DATA_FORMAT: FLOAT
VARIABLE: partition
# Endian representation of the computer that created the data.
# Intel is LITTLE, many other processors are BIG.
DATA_ENDIAN: LITTLE
# Centering refers to how the data is distributed in a cell. If you
# give "zonal" then it's 1 data value per zone. Otherwise the data
# will be centered at the nodes.
CENTERING: zonal
# BRICK_ORIGIN lets you specify a new coordinate system origin for
# the mesh that will be created to suit your data.
BRICK_ORIGIN: 0. 0. 0.
# BRICK_SIZE lets you specify the size of the brick.
BRICK_SIZE: 100.0 100.0 100.0
# BYTE_OFFSET: is optional and lets you specify some number of
# bytes to skip at the front of the file. This can be useful for
# skipping the 4-byte header that Fortran tends to write to files.
# If your file does not have a header then DO NOT USE BYTE_OFFSET.
BYTE_OFFSET: 4
# DIVIDE_BRICK: is optional and can be set to "true" or "false".
# When DIVIDE_BRICK is true, the BOV reader uses the values stored
# in DATA_BRICKLETS to divide the data into chunks that can be
# processed in parallel.
#DIVIDE_BRICK: true
# DATA_BRICKLETS: is optional and requires you to specify 3 integers
# that indicate the size of the bricklets to create when you have
# also specified the DIVIDE_BRICK option. The values chosen for
# DATA_BRICKLETS must be factors of the numbers used for DATA_SIZE.
#DATA_BRICKLETS: 1 1 1
# DATA_COMPONENTS: is optional and tells the BOV reader how many
# components your data has. 1=scalar, 2=complex number, 3=vector,
# 4 and beyond indicate an array variable. You can use "COMPLEX"
# instead of "2" for complex numbers.
#DATA_COMPONENTS: 1
